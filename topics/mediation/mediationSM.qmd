# Mediation {.section}

```{r, echo=FALSE}
if(!"DT" %in% installed.packages()) { install.packages("DT") }
library("DT")
```

## Mediation {.smaller}

:::: {.columns}

::: {.column}

![Mediation](https://upload.wikimedia.org/wikipedia/commons/4/4d/Mediation.jpg)
:::

::: {.column}

In statistics, a mediation model is one that seeks to identify and explain the mechanism or process that underlies an observed relationship between an independent variable and a dependent variable via the inclusion of a third hypothetical variable, known as a mediator variable (also a mediating variable, intermediary variable, or intervening variable).

Source: [WIKIPEDIA](https://en.wikipedia.org/wiki/Mediation_(statistics))

:::

::::

## Causality

> Mediation does not imply causation!

[Criteria for a causal relation](https://shklinkenberg.github.io/Statistical-Inference/11.1-mediation-as-causal-process.html#causalcriteria)

All requirements need to be met:

1. Correlation
2. Time order
3. No [spurious correlation](https://www.tylervigen.com/spurious-correlations)
4. No common cause confounder 

## Example

Does the speed of recovery after sickness improve with the use of alternative medicine or is this effect mediated by a healthy lifestyle?

![<a style="font-size:50%;" href="https://www.pexels.com/photo/green-purple-flower-163186/" target="_blank">Photo by Pixabay from Pexels</a>](../../../../topics/mediation/green-purple-flower-163186.jpg)

## Mediaton paths  {.flexbox .vcenter}

<!-- 1. $\widehat{\text{Outcome}} = b_0 + b_c \text{Predictor}_i$ -->
<!-- 2. $\widehat{\text{Mediator}} = b_0 + b_a \text{Predictor}_i$ -->
<!-- 3. $\widehat{\text{Outcome}} = b_0 + b_{c`} \text{Predictor}_i + b_b \text{Mediator}_i$ -->

<!-- ![Mediation Path](../../../topics/mediation/mediation.jpeg) -->

![Mediation Path](../../../../topics/mediation/mediation_regressions_relation.png)

```{r, echo=FALSE, eval=FALSE}
# library("DiagrammeR")

# mermaid("mediation.mmd")

# grViz("mediation.gv", width = 400)
```


```{r, echo=FALSE}
## Simulate data {.subsection}

# Create predictor variable


set.seed(1976)
## Set parameters for simulation
n     = 100
mu    = 10
sigma = 2
## Predictor
use.homeopathic.remedies = rnorm(n, mu, sigma)
```


```{r, echo=FALSE}
## Mediator 

# Create mediator

b0    = 2
b1    = 1.2
error = rnorm(n,0,.7)
healthy.lifestyle = b0 + b1*use.homeopathic.remedies + error
```


```{r, echo=FALSE}
## Specify model 

# Create outcome variable

b0    = 6
b1    = 1.2
b2    = 3
error = rnorm(n,0,1.4)
speed.of.healing = b0 + b1*use.homeopathic.remedies + b2*healthy.lifestyle + error

data <- data.frame(use.homeopathic.remedies, 
                   healthy.lifestyle, 
                   speed.of.healing)
data <- round(data, 4)
```

```{r, echo=FALSE, eval=TRUE}
## Write data for use in SPSS
write.csv(data, "mediation.csv", row.names=FALSE)
```

## The data {.subsection .smaller}

```{r, echo=FALSE}
datatable(data, rownames = FALSE, 
          extensions = 'Buttons',
          options = list(searching = FALSE, 
                         scrollY   = 300, 
                         paging    = F, 
                         info      = F,
                         dom       = 'Bfrtip',
                         buttons   = c('csv')
                         )
          )
```

## Apply 3 models {.smaller}

```{r, echo=FALSE}
# load package
library(sjPlot)
library(sjmisc)
library(sjlabelled)


m.1.out.pre     <- lm(speed.of.healing  ~ use.homeopathic.remedies)
m.2.med.pre     <- lm(healthy.lifestyle ~ use.homeopathic.remedies)
m.3.out.pre.med <- lm(speed.of.healing  ~ use.homeopathic.remedies + healthy.lifestyle)
```

::: {.panel-tabset}

## Model 1

$$\widehat{\text{Outcome}} = b_0 + b_c \times \text{Predictor}_i$$

```{r, echo=FALSE}
tab_model(m.1.out.pre)
```

## Model 2

$$\widehat{\text{Mediator}} = b_0 + b_a \times \text{Predictor}_i$$

```{r, echo=FALSE}
tab_model(m.2.med.pre)
```

## Model 3

$$\widehat{\text{Outcome}} = b_0 + b_{c`} \times \text{Predictor}_i + b_b \times \text{Mediator}_i$$

```{r, echo=FALSE}
tab_model(m.3.out.pre.med)
```

:::



## Extract beta coÃ«fficients

```{r, echo=FALSE}
b.a        = m.2.med.pre$coefficients[2]
b.b        = m.3.out.pre.med$coefficients[3]
b.c        = m.1.out.pre$coefficients[2]
b.c.accent = m.3.out.pre.med$coefficients[2]
```

$$
\begin{aligned}
b_a &= `r round(b.a, 3)` \\
b_b &= `r round(b.b, 3)` \\
b_c &= `r round(b.c, 3)` \\
b_{c`} &= `r round(b.c.accent, 3)` \\
\end{aligned}
$$

## Visual {.subsection}

```{r, fig.asp=1, fig.width=5, fig.align='center'}
plot(data$use.homeopathic.remedies, data$speed.of.healing, col = 'red', xlab="alter", ylab="rocov")

fit.1 <- lm(speed.of.healing ~ use.homeopathic.remedies, data)

abline(fit.1, col = 'green')
```

## 3D Visual

```{r, echo=FALSE, warning=FALSE}
## 3d plot package rgl
## install.packages('rgl')
library("rgl")

library(knitr)
knit_hooks$set(webgl = hook_webgl)

min.var <- apply(data, 2, min)
max.var <- apply(data, 2, max)

#1 #D scatter 

plot3d(data$use.homeopathic.remedies, data$healthy.lifestyle, data$speed.of.healing,
       col  = "red",
       xlab = "Homeopathic", 
       ylab = "Lifestyle",
       zlab = "Healing",
       size = 8)

#2 Add use.homeopathic.remedies value planes 

quantiles <- as.vector(quantile(data$use.homeopathic.remedies, seq(.1,.9,.1)))
sds       <- c(mean(data$healthy.lifestyle)+(sd(data$healthy.lifestyle)*c(-1,0,1)))
# sds       <- 1:4

planes3d(a = 0,
         b = 1,
         c = 0,
         #d = c(1,2,3,4),
         d = -sds,
         alpha=0.1,
         color = c("blue"))

#3 Add regression model surface

## Fit model
fit <- lm(speed.of.healing ~ use.homeopathic.remedies + healthy.lifestyle, data)

## Create xyz coordinates
regeq <- function(predictor, mediator) { 
    fit$coefficients[1] + 
    fit$coefficients[2]*predictor + 
    fit$coefficients[3]*mediator
}


x.pre <- seq(min.var[1], max.var[1], length.out=30)
y.med <- seq(min.var[2], max.var[2], length.out=30)

z.pre <- outer(x.pre, y.med, FUN='regeq')

# z.pre[z.pre > 4] = 4
# z.pre[z.pre < 1] = 1


## Add 3D regression plane to scatter plot 
surface3d(x.pre, y.med, z.pre, color = c("green"))

aspect3d(1,1,1)
# view3d(theta = 5)
# view3d(theta = -10, phi = -90)
# play3d(spin3d(axis = c(0, 0, 1), rpm = 30), duration = 5)
rglwidget()
```

Interactive, give it a spin.

## Calculate indirect effect {.subsection}

$a \times b = b_a \times b_b$

```{r, echo=TRUE}
b.a*b.b
b.c - b.c.accent
```

## Calculate indirect effect (partially standardized) {.subsection}

$\frac{ab}{s_{Outcome}} = \frac{b_a b_b}{s_{Outcome}}$

```{r, echo=TRUE}
b.a*b.b/sd(speed.of.healing)
```

## Calculate indirect effect (standardized) {.subsection}

$\frac{ab}{s_{Outcome}} \times s_{Predictor} = \frac{b_a b_b}{s_{Outcome}} \times s_{Predictor}$

```{r, echo=TRUE}
b.a*b.b/sd(speed.of.healing)*sd(use.homeopathic.remedies)
```

